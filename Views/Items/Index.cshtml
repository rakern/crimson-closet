@model IEnumerable<Item>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutTheme.cshtml";
}
@using System;
@using System.ComponentModel.DataAnnotations;
@using System.Linq;
@using System.Reflection;

<div class="container mt-5 mb-5">

    <h2>Item manager</h2>

    <p>
        <a asp-action="Create">Create New</a>
    </p>




    <table id="page-id-closet" class="table make-jquery-table  table-striped">
        <thead>
            <tr>
                <th>
                    Code
                </th>
                <th>
                    Status
                </th>
                <th>
                    Brand
                </th>
                <th>
                    Size
                </th>
                <th>
                    Color
                </th>
                <th>
                    Photo
                </th>
                <th>
                    Type
                </th>
                <th>
                    Gender Type
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemStatus)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemBrand)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemSize)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemColor)
                    </td>
                    <td>
                        @if (item.ItemPhoto != null)
                        {
                            var base64 = Convert.ToBase64String(item.ItemPhoto);
                            var imgSrc = string.Format("data:image/jpg;base64,{0}", base64);
                            <img src="@imgSrc" height="100" width="100" style="border-radius:50%" />

                            //<img width="100" height="100" src="@Url.Action("GetActorPhoto", "Actors", new {item.ActorId})" />
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemType.ItemDescription)
                    </td>
                    <td>
                        @if (item.ItemGender != null)
                        {
                            var enumValue = item.ItemGender;
                            var itemGenderName = enumValue.GetType().GetMember(enumValue.ToString()).First().GetCustomAttribute<DisplayAttribute>().GetName();
                            @Html.DisplayFor(modelItem => itemGenderName)
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.ItemGender)
                        }

                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ItemId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.ItemId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.ItemId">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

